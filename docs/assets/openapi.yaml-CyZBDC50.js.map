{"version":3,"file":"openapi.yaml-CyZBDC50.js","sources":["../../../node_modules/.zudoku/processed/openapi.yaml.js"],"sourcesContent":["const __refs = Array.from({ length: 2 }, () => ({}));\nconst __refMap = {\n  \"#/components/schemas/User\": __refs[0],\n  \"#/components/schemas/Post\": __refs[1]\n};\nObject.assign(__refs[0], {\n  \"required\": [\n    \"email\",\n    \"id\",\n    \"username\"\n  ],\n  \"type\": \"object\",\n  \"properties\": {\n    \"id\": {\n      \"type\": \"string\",\n      \"description\": \"The unique identifier of the user.\"\n    },\n    \"username\": {\n      \"type\": \"string\",\n      \"description\": \"A unique name that identifies the user.\"\n    },\n    \"email\": {\n      \"type\": \"string\",\n      \"description\": \"The user's email address.\",\n      \"format\": \"email\"\n    },\n    \"createdAt\": {\n      \"type\": \"string\",\n      \"description\": \"The date and time when the user was created.\",\n      \"format\": \"date-time\"\n    }\n  },\n  \"examples\": [\n    {\n      \"createdAt\": \"2000-01-23T04:56:07.000+00:00\",\n      \"id\": \"id\",\n      \"email\": \"\",\n      \"username\": \"username\"\n    }\n  ]\n});\nObject.assign(__refs[1], {\n  \"required\": [\n    \"content\",\n    \"id\",\n    \"userId\"\n  ],\n  \"type\": \"object\",\n  \"properties\": {\n    \"id\": {\n      \"type\": \"string\",\n      \"description\": \"The unique identifier of the post.\"\n    },\n    \"userId\": {\n      \"type\": \"string\",\n      \"description\": \"The unique identifier of the post's author.\"\n    },\n    \"content\": {\n      \"type\": \"string\",\n      \"description\": \"The text\"\n    }\n  },\n  \"examples\": [\n    {\n      \"id\": \"id\",\n      \"userId\": \"userId\",\n      \"content\": \"content\"\n    }\n  ]\n});\nexport const schema = {\n  \"openapi\": \"3.1.1\",\n  \"info\": {\n    \"title\": \"Social Network API\",\n    \"description\": \"API for a simple social network supporting users and posts.\",\n    \"termsOfService\": \"http://example.com/terms/\",\n    \"contact\": {\n      \"email\": \"support@example.com\"\n    },\n    \"license\": {\n      \"name\": \"Apache 2.0\",\n      \"url\": \"http://www.apache.org/licenses/LICENSE-2.0.html\"\n    },\n    \"version\": \"1.0.0\"\n  },\n  \"servers\": [\n    {\n      \"url\": \"https://api.example.com/v1\"\n    }\n  ],\n  \"tags\": [\n    {\n      \"name\": \"user\",\n      \"description\": \"Operations related to users\"\n    },\n    {\n      \"name\": \"post\",\n      \"description\": \"Operations related to posts\"\n    }\n  ],\n  \"paths\": {\n    \"/users\": {\n      \"get\": {\n        \"tags\": [\n          \"user\"\n        ],\n        \"summary\": \"Get a list of all users\",\n        \"description\": \"Retrieve a paginated list of all registered users.\",\n        \"operationId\": \"getUsers\",\n        \"parameters\": [\n          {\n            \"name\": \"page\",\n            \"in\": \"query\",\n            \"description\": \"The page number for pagination.\",\n            \"required\": false,\n            \"style\": \"form\",\n            \"explode\": true,\n            \"schema\": {\n              \"type\": \"integer\",\n              \"default\": 1\n            }\n          },\n          {\n            \"name\": \"limit\",\n            \"in\": \"query\",\n            \"description\": \"The number of users per page.\",\n            \"required\": false,\n            \"style\": \"form\",\n            \"explode\": true,\n            \"schema\": {\n              \"type\": \"integer\",\n              \"default\": 10\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"A list of users.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": __refMap[\"#/components/schemas/User\"],\n                  \"x-content-type\": \"application/json\"\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"Invalid request parameters.\"\n          },\n          \"500\": {\n            \"description\": \"Internal server error.\"\n          }\n        },\n        \"x-swagger-router-controller\": \"User\"\n      },\n      \"post\": {\n        \"tags\": [\n          \"user\"\n        ],\n        \"summary\": \"Add a new user\",\n        \"operationId\": \"addUser\",\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": __refMap[\"#/components/schemas/User\"]\n            }\n          },\n          \"required\": true\n        },\n        \"responses\": {\n          \"201\": {\n            \"description\": \"User created successfully\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": __refMap[\"#/components/schemas/User\"]\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"Invalid input\"\n          }\n        },\n        \"x-swagger-router-controller\": \"User\"\n      }\n    },\n    \"/users/{userId}\": {\n      \"get\": {\n        \"tags\": [\n          \"user\"\n        ],\n        \"summary\": \"Get a user by ID\",\n        \"operationId\": \"getUser\",\n        \"parameters\": [\n          {\n            \"name\": \"userId\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"style\": \"simple\",\n            \"explode\": false,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"User found\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": __refMap[\"#/components/schemas/User\"]\n              }\n            }\n          },\n          \"404\": {\n            \"description\": \"User not found\"\n          }\n        },\n        \"x-swagger-router-controller\": \"User\"\n      },\n      \"put\": {\n        \"tags\": [\n          \"user\"\n        ],\n        \"summary\": \"Update a user by ID\",\n        \"operationId\": \"updateUser\",\n        \"parameters\": [\n          {\n            \"name\": \"userId\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"style\": \"simple\",\n            \"explode\": false,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": __refMap[\"#/components/schemas/User\"]\n            }\n          },\n          \"required\": true\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"User updated successfully\"\n          },\n          \"400\": {\n            \"description\": \"Invalid input\"\n          },\n          \"404\": {\n            \"description\": \"User not found\"\n          }\n        },\n        \"x-swagger-router-controller\": \"User\"\n      },\n      \"delete\": {\n        \"tags\": [\n          \"user\"\n        ],\n        \"summary\": \"Delete a user by ID\",\n        \"operationId\": \"deleteUser\",\n        \"parameters\": [\n          {\n            \"name\": \"userId\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"style\": \"simple\",\n            \"explode\": false,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"204\": {\n            \"description\": \"User deleted successfully\"\n          },\n          \"404\": {\n            \"description\": \"User not found\"\n          }\n        },\n        \"x-swagger-router-controller\": \"User\"\n      }\n    },\n    \"/posts\": {\n      \"get\": {\n        \"tags\": [\n          \"post\"\n        ],\n        \"summary\": \"Get all posts\",\n        \"operationId\": \"getPosts\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"List of posts\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": __refMap[\"#/components/schemas/Post\"],\n                  \"x-content-type\": \"application/json\"\n                }\n              }\n            }\n          }\n        },\n        \"x-swagger-router-controller\": \"Post\"\n      },\n      \"post\": {\n        \"tags\": [\n          \"post\"\n        ],\n        \"summary\": \"Add a new post\",\n        \"operationId\": \"addPost\",\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": __refMap[\"#/components/schemas/Post\"]\n            }\n          },\n          \"required\": true\n        },\n        \"responses\": {\n          \"201\": {\n            \"description\": \"Post created successfully\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": __refMap[\"#/components/schemas/Post\"]\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"Invalid input\"\n          }\n        },\n        \"x-swagger-router-controller\": \"Post\"\n      }\n    },\n    \"/posts/{postId}\": {\n      \"get\": {\n        \"tags\": [\n          \"post\"\n        ],\n        \"summary\": \"Get a post by ID\",\n        \"operationId\": \"getPost\",\n        \"parameters\": [\n          {\n            \"name\": \"postId\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"style\": \"simple\",\n            \"explode\": false,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Post found\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": __refMap[\"#/components/schemas/Post\"]\n              }\n            }\n          },\n          \"404\": {\n            \"description\": \"Post not found\"\n          }\n        },\n        \"x-swagger-router-controller\": \"Post\"\n      },\n      \"put\": {\n        \"tags\": [\n          \"post\"\n        ],\n        \"summary\": \"Update a post by ID\",\n        \"operationId\": \"updatePost\",\n        \"parameters\": [\n          {\n            \"name\": \"postId\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"style\": \"simple\",\n            \"explode\": false,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": __refMap[\"#/components/schemas/Post\"]\n            }\n          },\n          \"required\": true\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Post updated successfully\"\n          },\n          \"400\": {\n            \"description\": \"Invalid input\"\n          },\n          \"404\": {\n            \"description\": \"Post not found\"\n          }\n        },\n        \"x-swagger-router-controller\": \"Post\"\n      },\n      \"delete\": {\n        \"tags\": [\n          \"post\"\n        ],\n        \"summary\": \"Delete a post by ID\",\n        \"operationId\": \"deletePost\",\n        \"parameters\": [\n          {\n            \"name\": \"postId\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"style\": \"simple\",\n            \"explode\": false,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"204\": {\n            \"description\": \"Post deleted successfully\"\n          },\n          \"404\": {\n            \"description\": \"Post not found\"\n          }\n        },\n        \"x-swagger-router-controller\": \"Post\"\n      }\n    },\n    \"/users/{userId}/posts\": {\n      \"get\": {\n        \"tags\": [\n          \"post\"\n        ],\n        \"summary\": \"Get all posts from a specific user\",\n        \"operationId\": \"getUserPosts\",\n        \"parameters\": [\n          {\n            \"name\": \"userId\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"style\": \"simple\",\n            \"explode\": false,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"List of user's posts\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": __refMap[\"#/components/schemas/Post\"],\n                  \"x-content-type\": \"application/json\"\n                }\n              }\n            }\n          },\n          \"404\": {\n            \"description\": \"User not found\"\n          }\n        },\n        \"x-swagger-router-controller\": \"Post\"\n      }\n    }\n  },\n  \"components\": {\n    \"schemas\": {\n      \"User\": {\n        \"required\": [\n          \"email\",\n          \"id\",\n          \"username\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": {\n            \"type\": \"string\",\n            \"description\": \"The unique identifier of the user.\"\n          },\n          \"username\": {\n            \"type\": \"string\",\n            \"description\": \"A unique name that identifies the user.\"\n          },\n          \"email\": {\n            \"type\": \"string\",\n            \"description\": \"The user's email address.\",\n            \"format\": \"email\"\n          },\n          \"createdAt\": {\n            \"type\": \"string\",\n            \"description\": \"The date and time when the user was created.\",\n            \"format\": \"date-time\"\n          }\n        },\n        \"examples\": [\n          {\n            \"createdAt\": \"2000-01-23T04:56:07.000+00:00\",\n            \"id\": \"id\",\n            \"email\": \"\",\n            \"username\": \"username\"\n          }\n        ]\n      },\n      \"Post\": {\n        \"required\": [\n          \"content\",\n          \"id\",\n          \"userId\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": {\n            \"type\": \"string\",\n            \"description\": \"The unique identifier of the post.\"\n          },\n          \"userId\": {\n            \"type\": \"string\",\n            \"description\": \"The unique identifier of the post's author.\"\n          },\n          \"content\": {\n            \"type\": \"string\",\n            \"description\": \"The text\"\n          }\n        },\n        \"examples\": [\n          {\n            \"id\": \"id\",\n            \"userId\": \"userId\",\n            \"content\": \"content\"\n          }\n        ]\n      }\n    }\n  }\n};"],"names":["__refs","__refMap","schema"],"mappings":"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,GACX,OAAU,CACR,KAAQ,QACtB,CACA,CACS,EACD,YAAe,CACb,QAAW,CACT,mBAAoB,CAClB,OAAUA,EAAS,2BAA2B,CAC5D,CACW,EACD,SAAY,EACb,EACD,UAAa,CACX,IAAO,CACL,YAAe,2BAChB,EACD,IAAO,CACL,YAAe,eAChB,EACD,IAAO,CACL,YAAe,gBAC3B,CACS,EACD,8BAA+B,MAChC,EACD,OAAU,CACR,KAAQ,CACN,MACD,EACD,QAAW,sBACX,YAAe,aACf,WAAc,CACZ,CACE,KAAQ,SACR,GAAM,OACN,SAAY,GACZ,MAAS,SACT,QAAW,GACX,OAAU,CACR,KAAQ,QACtB,CACA,CACS,EACD,UAAa,CACX,IAAO,CACL,YAAe,2BAChB,EACD,IAAO,CACL,YAAe,gBAC3B,CACS,EACD,8BAA+B,MACvC,CACK,EACD,wBAAyB,CACvB,IAAO,CACL,KAAQ,CACN,MACD,EACD,QAAW,qCACX,YAAe,eACf,WAAc,CACZ,CACE,KAAQ,SACR,GAAM,OACN,SAAY,GACZ,MAAS,SACT,QAAW,GACX,OAAU,CACR,KAAQ,QACtB,CACA,CACS,EACD,UAAa,CACX,IAAO,CACL,YAAe,uBACf,QAAW,CACT,mBAAoB,CAClB,OAAU,CACR,KAAQ,QACR,MAASA,EAAS,2BAA2B,EAC7C,iBAAkB,kBACpC,CACA,CACA,CACW,EACD,IAAO,CACL,YAAe,gBAC3B,CACS,EACD,8BAA+B,MACvC,CACA,CACG,EACD,WAAc,CACZ,QAAW,CACT,KAAQ,CACN,SAAY,CACV,QACA,KACA,UACD,EACD,KAAQ,SACR,WAAc,CACZ,GAAM,CACJ,KAAQ,SACR,YAAe,oCAChB,EACD,SAAY,CACV,KAAQ,SACR,YAAe,yCAChB,EACD,MAAS,CACP,KAAQ,SACR,YAAe,4BACf,OAAU,OACX,EACD,UAAa,CACX,KAAQ,SACR,YAAe,+CACf,OAAU,WACtB,CACS,EACD,SAAY,CACV,CACE,UAAa,gCACb,GAAM,KACN,MAAS,GACT,SAAY,UACxB,CACA,CACO,EACD,KAAQ,CACN,SAAY,CACV,UACA,KACA,QACD,EACD,KAAQ,SACR,WAAc,CACZ,GAAM,CACJ,KAAQ,SACR,YAAe,oCAChB,EACD,OAAU,CACR,KAAQ,SACR,YAAe,6CAChB,EACD,QAAW,CACT,KAAQ,SACR,YAAe,UAC3B,CACS,EACD,SAAY,CACV,CACE,GAAM,KACN,OAAU,SACV,QAAW,SACvB,CACA,CACA,CACA,CACA,CACA","x_google_ignoreList":[0]}